#include <espnow.h>
#include <ESP8266WiFi.h>
//#include <WiFi.h> 
#include <Wire.h>
//Datu estructura definitu
typedef struct struct_message {  
    boolean windowOpen;
    int windowID;
}struct_message;

//Datu estructura horren bariable bat sortu
struct_message windowInfo;

//Lehioak irekitak dauden bariableak
//windowOpen = 1 
boolean windowOpen1;
boolean windowOpen2;


// Callback when data is received
void OnDataRecv(uint8_t * mac,uint8_t *incomingData, uint8_t len) {
  memcpy(&windowInfo, incomingData, sizeof(windowInfo));
  Serial.print("Bytes received: ");
  Serial.println(len);
  //Serial.println(windowInfo.windowOpen);
  //Serial.println(windowInfo.windowID);
  if(windowInfo.windowID == 1){
    windowOpen1=windowInfo.windowOpen;
    Serial.print("1. LEIHOA: ");
    Serial.print(windowOpen1);
    Serial.print(" - ");
    if (windowOpen1){
      Serial.println("IREKITA");
      }else{
        Serial.println("ITXITA");
        }
    }
    if(windowInfo.windowID == 2){
    windowOpen2=windowInfo.windowOpen;
    Serial.print("2. LEIHOA: ");
    Serial.print(windowOpen2);
    Serial.print(" - ");
    if (windowOpen2){
      Serial.println("IREKITA");
      }else{
        Serial.println("ITXITA");
        }
    }
//    if(windowOpen1){
//    Serial.println("IREKITA1");
//  }else{
//        Serial.println("ITXITA1");
//  }
//   Serial.print("Bytes received: ");
//  Serial.println(len);
//  windowOpen2 = windowOpen;  
//  if(windowOpen2){
//    Serial.println("IREKITA2");
//  }else{
//        Serial.println("ITXITA2");
//  }
}

void setup() {
  // Init Serial Monitor
  Serial.begin(115200);

  // Set device as a Wi-Fi Station
  WiFi.mode(WIFI_STA);

  // Init ESP-NOW
  if (esp_now_init() != 0) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }

  // Register for a callback function that will be called when data is received
  esp_now_register_recv_cb(OnDataRecv);
}
 
void loop() {


}
